#!/bin/sh

set -ex

case $1 in
build)
  if [ ! -d ./topics ]; then
    echo "There must be a 'topics' directory at the current path"
    exit 1
  fi

  DEFAULT_TOPIC=`cat .default_topic`

  mkdir -p build

  cat << EOF > build/index.html
  <html>
  <head>
  <meta charset="utf-8">
  <link rel="icon" href="data:;base64,iVBORw0KGgo=">
  </head>
  <body>
  <div id="_canopy" data-default-topic="$DEFAULT_TOPIC"></div>
  <script src="/canopy.js"></script>
  </body>
  </html>
EOF

  for D in `find "$PWD/build" ! -name '*_data*' -type d -mindepth 1`; do
    cp build/index.html $D
  done

  for D1 in `find "$PWD/build" ! -name '*_data*' -type d -mindepth 1`; do
    for D2 in `find "$PWD/build" ! -name '*_data*' -type d -mindepth 1`; do
      if [ ! -L "${D2}/$(basename $D1)" ]; then
        rm -f "${D2}/$(basename $D1)"
        ln -s $D1 $D2
      fi
    done
  done

  cp $(npm root -g)/canopy-js/dist/canopy.js build/canopy.js
  CANOPY_DEBUG=true node $(npm root -g)/canopy-js/dist/parser.js .
;;
update)
  cd /usr/local/lib/canopy
  git pull origin master
  cp dist/canopy.sh /usr/local/bin/canopy
  echo Update success;;
init)
  mkdir topics
  touch .gitignore
  echo "build/" >> .gitignore
  echo "Enter default topic name:"
  read DEFAULT_TOPIC
  echo $DEFAULT_TOPIC > .default_topic
  echo $DEFAULT_TOPIC | node $(npm root -g)/canopy-js/script/snake_case.js
  echo "${DEFAULT_TOPIC}: Text here." > $(echo $DEFAULT_TOPIC | node $(npm root -g)/canopy-js/script/snake_case.js)
  ;;
watch)
  command -v fswatch >/dev/null 2>&1 || { echo >&2 "Canopy watch requires fswatch to be installed."; exit;}

  if [ "$2" == "stop" ]; then
    kill $(cat .canopy_watch.pid) > /dev/null 2>&1;
    rm .canopy_watch.pid
    exit 0;
  fi

  PIDFILE=.canopy_watch.pid
  if [ -f $PIDFILE ];
  then
    PID=$(cat $PIDFILE)
    if ps -p $PID > /dev/null 2>&1;
    then
      # Canopy watch is already running
      kill $PID
    fi
  fi

  if [ ! -d ./topics ]; then
    echo "There must be a topics directory at the current path"
    exit 1
  fi

  #######
  fswatch -0 -o topics | CANOPY_DEBUG=true xargs -0 -n1 -I{} canopy build > /dev/null 2>&1 &
  #######

  echo $(jobs -p | tail -1) > $PIDFILE
  if [ $? -ne 0 ];
  then
    echo "Could not create PID file"
    exit 1
  fi

  canopy build;;
serve)
  canopy build
  $(npm root -g)/canopy-js/node_modules/http-server/bin/http-server build -p ${2:-3000}
  ;;
?|usage)
echo  "Usage:"
echo  "  canopy update"
echo  "  canopy init"
echo  "  canopy build"
echo  "  canopy watch"
echo  "  canopy watch stop"
echo  "  canopy serve [PORT]"
;;
*)
  echo Unknown command;;
esac
